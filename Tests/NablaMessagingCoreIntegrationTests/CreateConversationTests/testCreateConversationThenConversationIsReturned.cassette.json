{
  "name" : "testCreateConversationThenConversationIsReturned.cassette",
  "interactions" : [
    {
      "response" : {
        "status" : 200,
        "url" : "http:\/\/localhost:8080\/v1\/patient\/graphql\/sdk\/authenticated",
        "body" : {
          "data" : {
            "conversations" : {
              "hasMore" : false,
              "__typename" : "ConversationsOutput",
              "conversations" : [
                {
                  "id" : "50af113f-f7e4-45f4-bf49-70d64b2b5043",
                  "lastMessagePreview" : "You: Hello",
                  "updatedAt" : "2023-04-04T15:15:25.567+02:00",
                  "subtitle" : null,
                  "inboxPreviewTitle" : "Ask us anything",
                  "pictureUrl" : null,
                  "title" : null,
                  "unreadMessageCount" : 0,
                  "isLocked" : false,
                  "providers" : [

                  ],
                  "lastMessage" : {
                    "author" : {
                      "isMe" : true,
                      "__typename" : "Patient",
                      "id" : "268fd745-b8c7-4599-b03e-57e5180510e2",
                      "displayName" : "Benoit Patient"
                    },
                    "content" : {
                      "text" : "Hello",
                      "__typename" : "TextMessageContent"
                    },
                    "id" : "428a1489-8b1d-412d-964a-ddbec98e6783",
                    "clientId" : "597af448-ee3d-4323-8495-1d5115ffaa03",
                    "replyTo" : null,
                    "createdAt" : "2023-04-04T15:15:25.567+02:00",
                    "__typename" : "Message"
                  },
                  "__typename" : "Conversation"
                }
              ],
              "nextCursor" : "50"
            }
          }
        },
        "headers" : {
          "X-Nabla-Minimum-iOS-Code-Version" : "0",
          "X-Request-ID" : "e7fe4073-80af-45ac-8071-16c381178835",
          "X-Nabla-Minimum-Code-Version" : "398",
          "Content-Length" : "1633",
          "X-Trace-ID" : "e7fe4073-80af-45ac-8071-16c381178835",
          "Date" : "Tue, 04 Apr 2023 13:15:50 GMT",
          "Connection" : "keep-alive",
          "Server" : "ktor-server-core\/1.6.2",
          "x-nabla-cloudregion" : "EU_WEST1",
          "X-Nabla-Minimum-Android-Code-Version" : "0",
          "Vary" : "Origin",
          "Content-Type" : "application\/json; charset=UTF-8"
        }
      },
      "recorded_at" : 1680614150.8064098,
      "request" : {
        "headers" : {
          "X-Nabla-API-Key" : "test-api-key",
          "Content-Type" : "application\/json",
          "Accept-Language" : "en",
          "X-APOLLO-OPERATION-NAME" : "GetConversations",
          "X-Nabla-SDK-Platform" : "ios",
          "X-Nabla-SDK-Version" : "1.0.0",
          "apollographql-client-name" : "com.apple.dt.xctest.tool-apollo-ios",
          "apollographql-client-version" : "14.2-21501",
          "X-Nabla-Authorization" : "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIyNjhmZDc0NS1iOGM3LTQ1OTktYjAzZS01N2U1MTgwNTEwZTIiLCJzZXNzaW9uX2xvZ2luX21ldGhvZCI6Im9uZV90aW1lX3Rva2VuIiwiaXNzIjoiZGV2OnBhdGllbnQ6bmFibGEiLCJ0eXAiOiJCZWFyZXIiLCJleHAiOjE2ODA2MTQzNTEsInNlc3Npb25fdXVpZCI6Ijc1YzliYjljLTIxMTctNDZlNi05MTliLWUyMTIzOWEzMzEzYiIsIm9yZ2FuaXphdGlvblN0cmluZ0lkIjoibmFibGEifQ.pr7umWKoLn4YsMGLOzGp_4VAyrRozDZ1TNG0gc_z1gc",
          "X-APOLLO-OPERATION-TYPE" : "query"
        },
        "method" : "POST",
        "url" : "http:\/\/localhost:8080\/v1\/patient\/graphql\/sdk\/authenticated",
        "body" : {
          "variables" : {
            "page" : {
              "numberOfItems" : 50
            }
          },
          "query" : "query GetConversations($page: OpaqueCursorPage!) {\n  conversations(page: $page) {\n    __typename\n    conversations {\n      __typename\n      ...ConversationFragment\n    }\n    nextCursor\n    hasMore\n  }\n}\nfragment ConversationFragment on Conversation {\n  __typename\n  id\n  title\n  subtitle\n  lastMessagePreview\n  lastMessage {\n    __typename\n    ...MessageFragment\n  }\n  unreadMessageCount\n  inboxPreviewTitle\n  updatedAt\n  pictureUrl {\n    __typename\n    ...EphemeralUrlFragment\n  }\n  providers {\n    __typename\n    ...ProviderInConversationFragment\n  }\n  isLocked\n}\nfragment MessageFragment on Message {\n  __typename\n  id\n  clientId\n  createdAt\n  author {\n    __typename\n    ...MessageAuthorFragment\n  }\n  content {\n    __typename\n    ...MessageContentFragment\n  }\n  replyTo {\n    __typename\n    ...ReplyMessageFragment\n  }\n}\nfragment MessageAuthorFragment on MessageAuthor {\n  __typename\n  ... on Provider {\n    ...ProviderFragment\n  }\n  ... on Patient {\n    ...PatientFragment\n  }\n  ... on System {\n    ...SystemMessageFragment\n  }\n  ... on DeletedProvider {\n    empty: _\n  }\n}\nfragment ProviderFragment on Provider {\n  __typename\n  id\n  avatarUrl {\n    __typename\n    ...EphemeralUrlFragment\n  }\n  prefix\n  firstName\n  lastName\n}\nfragment EphemeralUrlFragment on EphemeralUrl {\n  __typename\n  expiresAt\n  url\n}\nfragment PatientFragment on Patient {\n  __typename\n  id\n  isMe\n  displayName\n}\nfragment SystemMessageFragment on System {\n  __typename\n  avatar {\n    __typename\n    url {\n      __typename\n      ...EphemeralUrlFragment\n    }\n  }\n  name\n}\nfragment MessageContentFragment on MessageContent {\n  __typename\n  ... on TextMessageContent {\n    ...TextMessageContentFragment\n  }\n  ... on ImageMessageContent {\n    ...ImageMessageContentFragment\n  }\n  ... on VideoMessageContent {\n    ...VideoMessageContentFragment\n  }\n  ... on DocumentMessageContent {\n    ...DocumentMessageContentFragment\n  }\n  ... on AudioMessageContent {\n    ...AudioMessageContentFragment\n  }\n  ... on DeletedMessageContent {\n    empty: _\n  }\n  ... on LivekitRoomMessageContent {\n    ...LivekitRoomMessageContentFragment\n  }\n}\nfragment TextMessageContentFragment on TextMessageContent {\n  __typename\n  text\n}\nfragment ImageMessageContentFragment on ImageMessageContent {\n  __typename\n  imageFileUpload {\n    __typename\n    id\n    url {\n      __typename\n      url\n    }\n    fileName\n    mimeType\n    width\n    height\n  }\n}\nfragment VideoMessageContentFragment on VideoMessageContent {\n  __typename\n  videoFileUpload {\n    __typename\n    id\n    url {\n      __typename\n      url\n    }\n    fileName\n    mimeType\n    width\n    height\n  }\n}\nfragment DocumentMessageContentFragment on DocumentMessageContent {\n  __typename\n  documentFileUpload {\n    __typename\n    id\n    url {\n      __typename\n      url\n    }\n    fileName\n    mimeType\n    thumbnail {\n      __typename\n      url {\n        __typename\n        url\n      }\n    }\n  }\n}\nfragment AudioMessageContentFragment on AudioMessageContent {\n  __typename\n  audioFileUpload {\n    __typename\n    id\n    url {\n      __typename\n      ...EphemeralUrlFragment\n    }\n    fileName\n    mimeType\n    durationMs\n  }\n}\nfragment LivekitRoomMessageContentFragment on LivekitRoomMessageContent {\n  __typename\n  livekitRoom {\n    __typename\n    ...LivekitRoomFragment\n  }\n}\nfragment LivekitRoomFragment on LivekitRoom {\n  __typename\n  uuid\n  status {\n    __typename\n    ... on LivekitRoomOpenStatus {\n      ...LivekitRoomOpenStatusFragment\n    }\n    ... on LivekitRoomClosedStatus {\n      ...LivekitRoomClosedStatusFragment\n    }\n  }\n}\nfragment LivekitRoomOpenStatusFragment on LivekitRoomOpenStatus {\n  __typename\n  url\n  token\n}\nfragment LivekitRoomClosedStatusFragment on LivekitRoomClosedStatus {\n  __typename\n  _\n}\nfragment ReplyMessageFragment on Message {\n  __typename\n  id\n  clientId\n  createdAt\n  author {\n    __typename\n    ...MessageAuthorFragment\n  }\n  content {\n    __typename\n    ...MessageContentFragment\n  }\n}\nfragment ProviderInConversationFragment on ProviderInConversation {\n  __typename\n  id\n  provider {\n    __typename\n    ...ProviderFragment\n  }\n  typingAt\n  seenUntil\n}",
          "operationName" : "GetConversations",
          "Tests-Request-Index" : 0
        }
      }
    },
    {
      "request" : {
        "method" : "POST",
        "headers" : {
          "X-Nabla-SDK-Version" : "1.0.0",
          "X-APOLLO-OPERATION-TYPE" : "mutation",
          "X-Nabla-API-Key" : "test-api-key",
          "X-APOLLO-OPERATION-NAME" : "registerOrUpdateDevice",
          "Content-Type" : "application\/json",
          "apollographql-client-version" : "14.2-21501",
          "X-Nabla-SDK-Platform" : "ios",
          "Accept-Language" : "en",
          "X-Nabla-Authorization" : "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIyNjhmZDc0NS1iOGM3LTQ1OTktYjAzZS01N2U1MTgwNTEwZTIiLCJzZXNzaW9uX2xvZ2luX21ldGhvZCI6Im9uZV90aW1lX3Rva2VuIiwiaXNzIjoiZGV2OnBhdGllbnQ6bmFibGEiLCJ0eXAiOiJCZWFyZXIiLCJleHAiOjE2ODA2MTQzNTEsInNlc3Npb25fdXVpZCI6Ijc1YzliYjljLTIxMTctNDZlNi05MTliLWUyMTIzOWEzMzEzYiIsIm9yZ2FuaXphdGlvblN0cmluZ0lkIjoibmFibGEifQ.pr7umWKoLn4YsMGLOzGp_4VAyrRozDZ1TNG0gc_z1gc",
          "apollographql-client-name" : "com.apple.dt.xctest.tool-apollo-ios"
        },
        "url" : "http:\/\/localhost:8080\/v1\/patient\/graphql\/sdk\/authenticated",
        "body" : {
          "Tests-Request-Index" : 0,
          "query" : "mutation registerOrUpdateDevice($deviceId: UUID, $input: DeviceInput!) {\n  registerOrUpdateDevice(deviceId: $deviceId, device: $input) {\n    __typename\n    deviceId\n    sentry {\n      __typename\n      env\n      dsn\n    }\n  }\n}",
          "operationName" : "registerOrUpdateDevice",
          "variables" : {
            "input" : {
              "codeVersion" : 42,
              "os" : "IOS",
              "deviceModel" : "Mocked: Simulator",
              "osVersion" : "Mocked: iOS13",
              "sdkModules" : [

              ]
            }
          }
        }
      },
      "response" : {
        "url" : "http:\/\/localhost:8080\/v1\/patient\/graphql\/sdk\/authenticated",
        "headers" : {
          "x-nabla-cloudregion" : "EU_WEST1",
          "Connection" : "keep-alive",
          "X-Nabla-Minimum-Android-Code-Version" : "0",
          "X-Nabla-Minimum-iOS-Code-Version" : "0",
          "Vary" : "Origin",
          "X-Request-ID" : "b69ba090-bc10-451e-b6e9-a8910ee81d97",
          "X-Trace-ID" : "b69ba090-bc10-451e-b6e9-a8910ee81d97",
          "X-Nabla-Minimum-Code-Version" : "398",
          "Date" : "Tue, 04 Apr 2023 13:15:50 GMT",
          "Server" : "ktor-server-core\/1.6.2",
          "Content-Length" : "395",
          "Content-Type" : "application\/json; charset=UTF-8"
        },
        "body" : {
          "data" : {
            "registerOrUpdateDevice" : {
              "deviceId" : "7d0b5028-2244-44fc-ab3f-40c7dcbb788a",
              "sentry" : {
                "env" : "dev",
                "dsn" : "https:\/\/077cdf8f56664d2d89f5de3b58d4a4b7@sentry-relay.nabla.com\/4504525115293696",
                "__typename" : "Sentry"
              },
              "__typename" : "UpdateDeviceOutput"
            }
          }
        },
        "status" : 200
      },
      "recorded_at" : 1680614150.864728
    },
    {
      "request" : {
        "body" : {
          "variables" : {
            "initialMessage" : {
              "content" : {
                "textInput" : {
                  "text" : "Hello"
                }
              },
              "clientId" : "F6AEF251-602C-4F16-A851-297F0CCD7F87"
            }
          },
          "query" : "mutation CreateConversation($title: String, $providerIds: [UUID!], $initialMessage: SendMessageInput) {\n  createConversation(\n    title: $title\n    providerIds: $providerIds\n    initialMessage: $initialMessage\n  ) {\n    __typename\n    conversation {\n      __typename\n      ...ConversationFragment\n    }\n  }\n}\nfragment ConversationFragment on Conversation {\n  __typename\n  id\n  title\n  subtitle\n  lastMessagePreview\n  lastMessage {\n    __typename\n    ...MessageFragment\n  }\n  unreadMessageCount\n  inboxPreviewTitle\n  updatedAt\n  pictureUrl {\n    __typename\n    ...EphemeralUrlFragment\n  }\n  providers {\n    __typename\n    ...ProviderInConversationFragment\n  }\n  isLocked\n}\nfragment MessageFragment on Message {\n  __typename\n  id\n  clientId\n  createdAt\n  author {\n    __typename\n    ...MessageAuthorFragment\n  }\n  content {\n    __typename\n    ...MessageContentFragment\n  }\n  replyTo {\n    __typename\n    ...ReplyMessageFragment\n  }\n}\nfragment MessageAuthorFragment on MessageAuthor {\n  __typename\n  ... on Provider {\n    ...ProviderFragment\n  }\n  ... on Patient {\n    ...PatientFragment\n  }\n  ... on System {\n    ...SystemMessageFragment\n  }\n  ... on DeletedProvider {\n    empty: _\n  }\n}\nfragment ProviderFragment on Provider {\n  __typename\n  id\n  avatarUrl {\n    __typename\n    ...EphemeralUrlFragment\n  }\n  prefix\n  firstName\n  lastName\n}\nfragment EphemeralUrlFragment on EphemeralUrl {\n  __typename\n  expiresAt\n  url\n}\nfragment PatientFragment on Patient {\n  __typename\n  id\n  isMe\n  displayName\n}\nfragment SystemMessageFragment on System {\n  __typename\n  avatar {\n    __typename\n    url {\n      __typename\n      ...EphemeralUrlFragment\n    }\n  }\n  name\n}\nfragment MessageContentFragment on MessageContent {\n  __typename\n  ... on TextMessageContent {\n    ...TextMessageContentFragment\n  }\n  ... on ImageMessageContent {\n    ...ImageMessageContentFragment\n  }\n  ... on VideoMessageContent {\n    ...VideoMessageContentFragment\n  }\n  ... on DocumentMessageContent {\n    ...DocumentMessageContentFragment\n  }\n  ... on AudioMessageContent {\n    ...AudioMessageContentFragment\n  }\n  ... on DeletedMessageContent {\n    empty: _\n  }\n  ... on LivekitRoomMessageContent {\n    ...LivekitRoomMessageContentFragment\n  }\n}\nfragment TextMessageContentFragment on TextMessageContent {\n  __typename\n  text\n}\nfragment ImageMessageContentFragment on ImageMessageContent {\n  __typename\n  imageFileUpload {\n    __typename\n    id\n    url {\n      __typename\n      url\n    }\n    fileName\n    mimeType\n    width\n    height\n  }\n}\nfragment VideoMessageContentFragment on VideoMessageContent {\n  __typename\n  videoFileUpload {\n    __typename\n    id\n    url {\n      __typename\n      url\n    }\n    fileName\n    mimeType\n    width\n    height\n  }\n}\nfragment DocumentMessageContentFragment on DocumentMessageContent {\n  __typename\n  documentFileUpload {\n    __typename\n    id\n    url {\n      __typename\n      url\n    }\n    fileName\n    mimeType\n    thumbnail {\n      __typename\n      url {\n        __typename\n        url\n      }\n    }\n  }\n}\nfragment AudioMessageContentFragment on AudioMessageContent {\n  __typename\n  audioFileUpload {\n    __typename\n    id\n    url {\n      __typename\n      ...EphemeralUrlFragment\n    }\n    fileName\n    mimeType\n    durationMs\n  }\n}\nfragment LivekitRoomMessageContentFragment on LivekitRoomMessageContent {\n  __typename\n  livekitRoom {\n    __typename\n    ...LivekitRoomFragment\n  }\n}\nfragment LivekitRoomFragment on LivekitRoom {\n  __typename\n  uuid\n  status {\n    __typename\n    ... on LivekitRoomOpenStatus {\n      ...LivekitRoomOpenStatusFragment\n    }\n    ... on LivekitRoomClosedStatus {\n      ...LivekitRoomClosedStatusFragment\n    }\n  }\n}\nfragment LivekitRoomOpenStatusFragment on LivekitRoomOpenStatus {\n  __typename\n  url\n  token\n}\nfragment LivekitRoomClosedStatusFragment on LivekitRoomClosedStatus {\n  __typename\n  _\n}\nfragment ReplyMessageFragment on Message {\n  __typename\n  id\n  clientId\n  createdAt\n  author {\n    __typename\n    ...MessageAuthorFragment\n  }\n  content {\n    __typename\n    ...MessageContentFragment\n  }\n}\nfragment ProviderInConversationFragment on ProviderInConversation {\n  __typename\n  id\n  provider {\n    __typename\n    ...ProviderFragment\n  }\n  typingAt\n  seenUntil\n}",
          "operationName" : "CreateConversation",
          "Tests-Request-Index" : 0
        },
        "headers" : {
          "X-Nabla-API-Key" : "test-api-key",
          "X-Nabla-SDK-Platform" : "ios",
          "X-APOLLO-OPERATION-TYPE" : "mutation",
          "apollographql-client-name" : "com.apple.dt.xctest.tool-apollo-ios",
          "X-Nabla-SDK-Version" : "1.0.0",
          "X-Nabla-Authorization" : "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIyNjhmZDc0NS1iOGM3LTQ1OTktYjAzZS01N2U1MTgwNTEwZTIiLCJzZXNzaW9uX2xvZ2luX21ldGhvZCI6Im9uZV90aW1lX3Rva2VuIiwiaXNzIjoiZGV2OnBhdGllbnQ6bmFibGEiLCJ0eXAiOiJCZWFyZXIiLCJleHAiOjE2ODA2MTQzNTEsInNlc3Npb25fdXVpZCI6Ijc1YzliYjljLTIxMTctNDZlNi05MTliLWUyMTIzOWEzMzEzYiIsIm9yZ2FuaXphdGlvblN0cmluZ0lkIjoibmFibGEifQ.pr7umWKoLn4YsMGLOzGp_4VAyrRozDZ1TNG0gc_z1gc",
          "apollographql-client-version" : "14.2-21501",
          "Accept-Language" : "en",
          "Content-Type" : "application\/json",
          "X-APOLLO-OPERATION-NAME" : "CreateConversation"
        },
        "url" : "http:\/\/localhost:8080\/v1\/patient\/graphql\/sdk\/authenticated",
        "method" : "POST"
      },
      "recorded_at" : 1680614150.9327121,
      "response" : {
        "body" : {
          "data" : {
            "createConversation" : {
              "conversation" : {
                "id" : "00678ad9-c28c-4f22-a23d-393e4db61968",
                "lastMessagePreview" : "You: Hello",
                "updatedAt" : "2023-04-04T15:15:50.873+02:00",
                "subtitle" : null,
                "inboxPreviewTitle" : "Ask us anything",
                "pictureUrl" : null,
                "title" : null,
                "unreadMessageCount" : 0,
                "isLocked" : false,
                "providers" : [

                ],
                "lastMessage" : {
                  "author" : {
                    "isMe" : true,
                    "__typename" : "Patient",
                    "id" : "268fd745-b8c7-4599-b03e-57e5180510e2",
                    "displayName" : "Benoit Patient"
                  },
                  "content" : {
                    "text" : "Hello",
                    "__typename" : "TextMessageContent"
                  },
                  "id" : "1d951a20-243a-4fba-b0e7-6fdb8c9451c1",
                  "clientId" : "f6aef251-602c-4f16-a851-297f0ccd7f87",
                  "replyTo" : null,
                  "createdAt" : "2023-04-04T15:15:50.873+02:00",
                  "__typename" : "Message"
                },
                "__typename" : "Conversation"
              },
              "__typename" : "CreateConversationOutput"
            }
          }
        },
        "status" : 200,
        "url" : "http:\/\/localhost:8080\/v1\/patient\/graphql\/sdk\/authenticated",
        "headers" : {
          "Connection" : "keep-alive",
          "Content-Type" : "application\/json; charset=UTF-8",
          "X-Nabla-Minimum-Code-Version" : "398",
          "Content-Length" : "1428",
          "X-Request-ID" : "8f409908-8135-4fa0-85c8-00cb26d12ef9",
          "X-Trace-ID" : "8f409908-8135-4fa0-85c8-00cb26d12ef9",
          "Date" : "Tue, 04 Apr 2023 13:15:50 GMT",
          "x-nabla-cloudregion" : "EU_WEST1",
          "X-Nabla-Minimum-iOS-Code-Version" : "0",
          "X-Nabla-Minimum-Android-Code-Version" : "0",
          "Server" : "ktor-server-core\/1.6.2",
          "Vary" : "Origin"
        }
      }
    },
    {
      "response" : {
        "url" : "http:\/\/localhost:8080\/v1\/patient\/graphql\/sdk\/authenticated",
        "status" : 200,
        "headers" : {
          "X-Request-ID" : "d7cda55f-817f-422e-a4f8-11d7e3ff2437",
          "X-Nabla-Minimum-iOS-Code-Version" : "0",
          "X-Nabla-Minimum-Android-Code-Version" : "0",
          "Vary" : "Origin",
          "x-nabla-cloudregion" : "EU_WEST1",
          "X-Trace-ID" : "d7cda55f-817f-422e-a4f8-11d7e3ff2437",
          "Content-Length" : "3051",
          "X-Nabla-Minimum-Code-Version" : "398",
          "Date" : "Tue, 04 Apr 2023 13:15:50 GMT",
          "Server" : "ktor-server-core\/1.6.2",
          "Connection" : "keep-alive",
          "Content-Type" : "application\/json; charset=UTF-8"
        },
        "body" : {
          "data" : {
            "conversations" : {
              "hasMore" : false,
              "__typename" : "ConversationsOutput",
              "conversations" : [
                {
                  "id" : "00678ad9-c28c-4f22-a23d-393e4db61968",
                  "lastMessagePreview" : "You: Hello",
                  "updatedAt" : "2023-04-04T15:15:50.873+02:00",
                  "subtitle" : null,
                  "inboxPreviewTitle" : "Ask us anything",
                  "pictureUrl" : null,
                  "title" : null,
                  "unreadMessageCount" : 0,
                  "isLocked" : false,
                  "providers" : [

                  ],
                  "lastMessage" : {
                    "author" : {
                      "isMe" : true,
                      "__typename" : "Patient",
                      "id" : "268fd745-b8c7-4599-b03e-57e5180510e2",
                      "displayName" : "Benoit Patient"
                    },
                    "content" : {
                      "text" : "Hello",
                      "__typename" : "TextMessageContent"
                    },
                    "id" : "1d951a20-243a-4fba-b0e7-6fdb8c9451c1",
                    "clientId" : "f6aef251-602c-4f16-a851-297f0ccd7f87",
                    "replyTo" : null,
                    "createdAt" : "2023-04-04T15:15:50.873+02:00",
                    "__typename" : "Message"
                  },
                  "__typename" : "Conversation"
                },
                {
                  "id" : "50af113f-f7e4-45f4-bf49-70d64b2b5043",
                  "lastMessagePreview" : "You: Hello",
                  "updatedAt" : "2023-04-04T15:15:25.567+02:00",
                  "subtitle" : null,
                  "inboxPreviewTitle" : "Ask us anything",
                  "pictureUrl" : null,
                  "title" : null,
                  "unreadMessageCount" : 0,
                  "isLocked" : false,
                  "providers" : [

                  ],
                  "lastMessage" : {
                    "author" : {
                      "isMe" : true,
                      "__typename" : "Patient",
                      "id" : "268fd745-b8c7-4599-b03e-57e5180510e2",
                      "displayName" : "Benoit Patient"
                    },
                    "content" : {
                      "text" : "Hello",
                      "__typename" : "TextMessageContent"
                    },
                    "id" : "428a1489-8b1d-412d-964a-ddbec98e6783",
                    "clientId" : "597af448-ee3d-4323-8495-1d5115ffaa03",
                    "replyTo" : null,
                    "createdAt" : "2023-04-04T15:15:25.567+02:00",
                    "__typename" : "Message"
                  },
                  "__typename" : "Conversation"
                }
              ],
              "nextCursor" : "50"
            }
          }
        }
      },
      "recorded_at" : 1680614150.9675388,
      "request" : {
        "headers" : {
          "Content-Type" : "application\/json",
          "apollographql-client-version" : "14.2-21501",
          "X-Nabla-SDK-Platform" : "ios",
          "Accept-Language" : "en",
          "X-Nabla-SDK-Version" : "1.0.0",
          "X-Nabla-Authorization" : "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIyNjhmZDc0NS1iOGM3LTQ1OTktYjAzZS01N2U1MTgwNTEwZTIiLCJzZXNzaW9uX2xvZ2luX21ldGhvZCI6Im9uZV90aW1lX3Rva2VuIiwiaXNzIjoiZGV2OnBhdGllbnQ6bmFibGEiLCJ0eXAiOiJCZWFyZXIiLCJleHAiOjE2ODA2MTQzNTEsInNlc3Npb25fdXVpZCI6Ijc1YzliYjljLTIxMTctNDZlNi05MTliLWUyMTIzOWEzMzEzYiIsIm9yZ2FuaXphdGlvblN0cmluZ0lkIjoibmFibGEifQ.pr7umWKoLn4YsMGLOzGp_4VAyrRozDZ1TNG0gc_z1gc",
          "X-Nabla-API-Key" : "test-api-key",
          "X-APOLLO-OPERATION-NAME" : "GetConversations",
          "apollographql-client-name" : "com.apple.dt.xctest.tool-apollo-ios",
          "X-APOLLO-OPERATION-TYPE" : "query"
        },
        "body" : {
          "variables" : {
            "page" : {
              "numberOfItems" : 50
            }
          },
          "query" : "query GetConversations($page: OpaqueCursorPage!) {\n  conversations(page: $page) {\n    __typename\n    conversations {\n      __typename\n      ...ConversationFragment\n    }\n    nextCursor\n    hasMore\n  }\n}\nfragment ConversationFragment on Conversation {\n  __typename\n  id\n  title\n  subtitle\n  lastMessagePreview\n  lastMessage {\n    __typename\n    ...MessageFragment\n  }\n  unreadMessageCount\n  inboxPreviewTitle\n  updatedAt\n  pictureUrl {\n    __typename\n    ...EphemeralUrlFragment\n  }\n  providers {\n    __typename\n    ...ProviderInConversationFragment\n  }\n  isLocked\n}\nfragment MessageFragment on Message {\n  __typename\n  id\n  clientId\n  createdAt\n  author {\n    __typename\n    ...MessageAuthorFragment\n  }\n  content {\n    __typename\n    ...MessageContentFragment\n  }\n  replyTo {\n    __typename\n    ...ReplyMessageFragment\n  }\n}\nfragment MessageAuthorFragment on MessageAuthor {\n  __typename\n  ... on Provider {\n    ...ProviderFragment\n  }\n  ... on Patient {\n    ...PatientFragment\n  }\n  ... on System {\n    ...SystemMessageFragment\n  }\n  ... on DeletedProvider {\n    empty: _\n  }\n}\nfragment ProviderFragment on Provider {\n  __typename\n  id\n  avatarUrl {\n    __typename\n    ...EphemeralUrlFragment\n  }\n  prefix\n  firstName\n  lastName\n}\nfragment EphemeralUrlFragment on EphemeralUrl {\n  __typename\n  expiresAt\n  url\n}\nfragment PatientFragment on Patient {\n  __typename\n  id\n  isMe\n  displayName\n}\nfragment SystemMessageFragment on System {\n  __typename\n  avatar {\n    __typename\n    url {\n      __typename\n      ...EphemeralUrlFragment\n    }\n  }\n  name\n}\nfragment MessageContentFragment on MessageContent {\n  __typename\n  ... on TextMessageContent {\n    ...TextMessageContentFragment\n  }\n  ... on ImageMessageContent {\n    ...ImageMessageContentFragment\n  }\n  ... on VideoMessageContent {\n    ...VideoMessageContentFragment\n  }\n  ... on DocumentMessageContent {\n    ...DocumentMessageContentFragment\n  }\n  ... on AudioMessageContent {\n    ...AudioMessageContentFragment\n  }\n  ... on DeletedMessageContent {\n    empty: _\n  }\n  ... on LivekitRoomMessageContent {\n    ...LivekitRoomMessageContentFragment\n  }\n}\nfragment TextMessageContentFragment on TextMessageContent {\n  __typename\n  text\n}\nfragment ImageMessageContentFragment on ImageMessageContent {\n  __typename\n  imageFileUpload {\n    __typename\n    id\n    url {\n      __typename\n      url\n    }\n    fileName\n    mimeType\n    width\n    height\n  }\n}\nfragment VideoMessageContentFragment on VideoMessageContent {\n  __typename\n  videoFileUpload {\n    __typename\n    id\n    url {\n      __typename\n      url\n    }\n    fileName\n    mimeType\n    width\n    height\n  }\n}\nfragment DocumentMessageContentFragment on DocumentMessageContent {\n  __typename\n  documentFileUpload {\n    __typename\n    id\n    url {\n      __typename\n      url\n    }\n    fileName\n    mimeType\n    thumbnail {\n      __typename\n      url {\n        __typename\n        url\n      }\n    }\n  }\n}\nfragment AudioMessageContentFragment on AudioMessageContent {\n  __typename\n  audioFileUpload {\n    __typename\n    id\n    url {\n      __typename\n      ...EphemeralUrlFragment\n    }\n    fileName\n    mimeType\n    durationMs\n  }\n}\nfragment LivekitRoomMessageContentFragment on LivekitRoomMessageContent {\n  __typename\n  livekitRoom {\n    __typename\n    ...LivekitRoomFragment\n  }\n}\nfragment LivekitRoomFragment on LivekitRoom {\n  __typename\n  uuid\n  status {\n    __typename\n    ... on LivekitRoomOpenStatus {\n      ...LivekitRoomOpenStatusFragment\n    }\n    ... on LivekitRoomClosedStatus {\n      ...LivekitRoomClosedStatusFragment\n    }\n  }\n}\nfragment LivekitRoomOpenStatusFragment on LivekitRoomOpenStatus {\n  __typename\n  url\n  token\n}\nfragment LivekitRoomClosedStatusFragment on LivekitRoomClosedStatus {\n  __typename\n  _\n}\nfragment ReplyMessageFragment on Message {\n  __typename\n  id\n  clientId\n  createdAt\n  author {\n    __typename\n    ...MessageAuthorFragment\n  }\n  content {\n    __typename\n    ...MessageContentFragment\n  }\n}\nfragment ProviderInConversationFragment on ProviderInConversation {\n  __typename\n  id\n  provider {\n    __typename\n    ...ProviderFragment\n  }\n  typingAt\n  seenUntil\n}",
          "operationName" : "GetConversations",
          "Tests-Request-Index" : 1
        },
        "url" : "http:\/\/localhost:8080\/v1\/patient\/graphql\/sdk\/authenticated",
        "method" : "POST"
      }
    }
  ]
}
